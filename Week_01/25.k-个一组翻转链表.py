#
# @lc app=leetcode.cn id=25 lang=python3
#
# [25] K 个一组翻转链表
#
# https://leetcode-cn.com/problems/reverse-nodes-in-k-group/description/
#
# algorithms
# Hard (57.91%)
# Likes:    461
# Dislikes: 0
# Total Accepted:    53.3K
# Total Submissions: 91.4K
# Testcase Example:  '[1,2,3,4,5]\n2'
#
# 给你一个链表，每 k 个节点一组进行翻转，请你返回翻转后的链表。
# 
# k 是一个正整数，它的值小于或等于链表的长度。
# 
# 如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。
# 
# 
# 
# 示例：
# 
# 给你这个链表：1->2->3->4->5
# 
# 当 k = 2 时，应当返回: 2->1->4->3->5
# 
# 当 k = 3 时，应当返回: 3->2->1->4->5
# 
# 
# 
# 说明：
# 
# 
# 你的算法只能使用常数的额外空间。
# 你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。
# 
# 
#


# 不会就抄一遍试试，之前的简单题目看完题解自己都能尝试做，这一次换个办法，直接一边抄一边理解

################################################################################
# 2020-05-02 18:50:03
# 决定先看懂尾插法, 栈和递归向后放一放，递归的问题需要统一的解决，常见的递归的几种场景（二叉树、链表、其他）。
# 如果理解了尾插法（国内的尾插和国际站的解法是一致的，也是比较好理解的），栈的方法理解并不困难，栈主要是在翻转的部分多了一种处理选择
################################################################################
# 2020-05-02 18:41:11
# 画了图，直接看题解吧...
# https://leetcode-cn.com/problems/reverse-nodes-in-k-group/solution/kge-yi-zu-fan-zhuan-lian-biao-by-powcai/
# 提供了三个思路: 栈、尾插、递归

# https://leetcode.com/problems/reverse-nodes-in-k-group/discuss/11491/Succinct-iterative-Python-O(n)-time-O(1)-space
# 国际站的代码也很清晰
################################################################################
